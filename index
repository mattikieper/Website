<!doctype html>
<html lang="de">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Schr√∂dingers Website</title>
  <style>
    :root{
      --bg:#0b0b0f; /* near-black */
      --fg:#e6e6ea; /* soft white */
      --muted:#1a1a22; /* panels */
      --border:#2a2a33;
      --accent:#6b6bff;
    }
    html,body{height:100%;}
    body{
      margin:0; display:grid; place-items:center; height:100%;
      background:radial-gradient(60% 60% at 50% 40%, #121218 0%, var(--bg) 60%);
      color:var(--fg); font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, "Apple Color Emoji", "Segoe UI Emoji";
    }
    .card{
      width:min(92vw, 420px);
      border:1px solid var(--border); border-radius:20px; background:linear-gradient(180deg, #101018, #0d0d13);
      box-shadow: 0 10px 30px rgba(0,0,0,.45), inset 0 1px 0 rgba(255,255,255,.03);
      padding:28px; display:flex; flex-direction:column; gap:20px; align-items:center;
    }
    .box{
      position:relative; width:240px; height:160px; border-radius:16px;
      background:linear-gradient(135deg, #1b1b24, #0f0f15); border:1px solid var(--border);
      overflow:hidden;
    }
    .box::before{ /* crossbars */
      content:""; position:absolute; inset:0; background:
        linear-gradient(#2c2c37, #2c2c37) center/1px 100% no-repeat,
        linear-gradient(#2c2c37, #2c2c37) center/100% 1px no-repeat;
      mix-blend-mode:screen; opacity:.45;
    }
    .shine{position:absolute; inset:0;}
    .shine::after{
      content:""; position:absolute; top:-10%; left:-30%; width:30%; height:120%;
      background:linear-gradient(90deg, transparent, rgba(255,255,255,.08), transparent);
      transform:skewX(12deg); animation: sweep 3s linear infinite;
    }
    @keyframes sweep{ from{ transform:translateX(0) skewX(12deg);} to{ transform:translateX(450px) skewX(12deg);} }

    .result{ font-size:72px; line-height:1; user-select:none; }

    .row{ display:flex; gap:10px; }
    .btn{
      appearance:none; border:1px solid var(--border); background:var(--muted);
      color:var(--fg); border-radius:999px; width:44px; height:44px; display:grid; place-items:center;
      font-size:20px; cursor:pointer; transition: transform .06s ease, background .2s ease, border-color .2s ease;
    }
    .btn:hover{ background:#20202a; border-color:#3a3a45; }
    .btn:active{ transform: translateY(1px) scale(.98); }
    .btn:focus-visible{ outline:2px solid var(--accent); outline-offset:2px; }

    /* reduce motion preference */
    @media (prefers-reduced-motion: reduce){ .shine::after{ animation:none; } .btn{ transition:none; } }
  </style>
</head>
<body>
  <main class="card" aria-label="Schr√∂dingers Website">
    <div id="stage" class="box" aria-live="polite" role="img" aria-label="Unbeobachteter Zustand">
      <div class="shine" aria-hidden="true"></div>
    </div>
    <div class="row">
      <button id="observe" class="btn" title="Beobachten" aria-label="Beobachten">üëÅÔ∏è</button>
      <button id="reset" class="btn" title="Reset" aria-label="Reset" hidden>‚Ü∫</button>
    </div>
  </main>

  <script>
    (function(){
      const stage = document.getElementById('stage');
      const observeBtn = document.getElementById('observe');
      const resetBtn = document.getElementById('reset');

      function rng(){
        if (window.crypto && crypto.getRandomValues){
          const a = new Uint32Array(1); crypto.getRandomValues(a); return a[0] & 1;
        }
        return Math.random() < 0.5 ? 0 : 1;
      }

      function render(state){
        stage.innerHTML = '';
        stage.classList.remove('observed');
        if(state === 'alive'){
          const s = document.createElement('div'); s.className='result'; s.textContent='üò∫'; stage.appendChild(s);
          stage.setAttribute('aria-label','Ergebnis: lebendig');
        } else if(state === 'dead'){
          const s = document.createElement('div'); s.className='result'; s.textContent='üëªüê±'; stage.appendChild(s);
          stage.setAttribute('aria-label','Ergebnis: tot');
        } else {
          const shine = document.createElement('div'); shine.className='shine'; shine.setAttribute('aria-hidden','true'); stage.appendChild(shine);
          stage.setAttribute('aria-label','Unbeobachteter Zustand');
        }
      }

      observeBtn.addEventListener('click', () => {
        const result = rng() ? 'alive' : 'dead';
        render(result);
        observeBtn.hidden = true; resetBtn.hidden = false;
      });
      resetBtn.addEventListener('click', () => {
        render('superposed');
        resetBtn.hidden = true; observeBtn.hidden = false;
      });

      render('superposed');
    })();
  </script>
</body>
</html>
